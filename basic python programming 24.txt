Question1
Create a function that takes an integer and returns a list from 1 to the given number, where:
1. If the number can be divided evenly by 4, amplify it by 10 (i.e. return 10 times the
number).
2. If the number cannot be divided evenly by 4, simply return the number.

def amplify(number):
    amp_list = []
    for num in range(1,number+1):
        if num % 4 == 0:
            amp_list.append(num*10)
        else:
            amp_list.append(num)
    return amp_list


Question2
Create a function that takes a list of numbers and return the number that's unique.

def unique(liss):
    liss1 = liss
    count_list = []
    for i in liss:
        count_list.append(liss.count(i))
    for i in range(len(count_list)):
        if count_list[i] == 1:
            index = i 
    print(liss1[index])

Question3
Your task is to create a Circle constructor that creates a circle with a radius provided by an
argument. The circles constructed must have two getters getArea() (PIr^2) and
getPerimeter() (2PI*r) which give both respective areas and perimeter (circumference).

class Circle():
    def __init__(self, r):
        self.radius = r

    def getArea(self):
        return round(self.radius**2*3.14)
    
    def getPerimeter(self):
        return round(2*self.radius*3.14)
		
		
Question4
Create a function that takes a list of strings and return a list, sorted from shortest to longest.

def sorting(string):
    return sorted(string, key= len)


Question5
Create a function that validates whether three given integers form a Pythagorean triplet. The
sum of the squares of the two smallest integers must equal the square of the largest number to
be validated.

def is_triplet(a,b,c):
    if (a*a + b*b == c*c) or (b*b + c*c == a*a) or (c*c + a*a == b*b) :
        return True
    else:
        return False